1. Прочитайте csv (ads_data_121288 - ads_data_121288.csv) файл, который находится в этой папке, при помощи библиотеки pandas

2. В данных вы найдете информацию о событиях, которые произошли с объявлением 121288 за два дня. Рассчитайте следующие метрики в разрезе каждого дня: количество показов, количество кликов, CTR, сумма потраченных денег. То есть для каждой метрики у вас должно получиться две цифры, за 2019-04-01 и 2019-04-02.
Рассчитать сумму потраченных денег можно по следующей формуле:
Значение из колонки ad_cost разделить на 1000 и умножить на количество показов объявления.

3. Теперь найдите процентную разницу между этими метриками. То есть найдите, насколько процентов каждая метрика увеличилась/уменьшилась 2 апреля по сравнению с 1 апреля.

4. Создайте текстовый файл, в котором будет собрана информация о том, какие метрики наблюдаются 2 апреля (представьте, что 2 апреля это сегодня, условно, вы отправляете отчет за сегодня, сравнивая данные со вчера), а также, на сколько процентов они уменьшились по сравнению со вчера. То есть в текстовом файле должен быть список метрик, их значения 2 апреля и процентное отличие от 1 апреля. Вариант текстового отчета:
Отчет по объявлению 121288 за 2 апреля
Траты: Х рублей (+Y%)
Показы: X (+Y%)
Клики: X (-Y%)
CTR: X (-Y%)

5. Отправьте получившийся текст к себе в личные сообщения во ВКонтакте в виде сообщения со сводкой метрик.

6. Все предыдущие шаги оформите в виде исполняемого скрипта (скриптов) и скрипта для DAG-а, в котором при помощи BashOperator-а (или других операторов на ваше усмотрение) будет вызываться исполняемый скрипт (скрипты).

7. В расписании для крона укажите каждый понедельник в 12 утра. Так, чтобы ваш скрипт с рассчетом дневных метрик отправлялся вам в личку каждый понедельник в 12 утра из Airflow